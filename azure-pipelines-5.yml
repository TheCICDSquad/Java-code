trigger:
- main

pool:
  name: Linux_Agent

variables:
  MAVEN_DIR: $(Agent.TempDirectory)/maven
  MAVEN_CACHE: $(Pipeline.Workspace)/.m2
  SOURCE_DIR: $(Build.SourcesDirectory)/Helm/Pet_clinic_project/spring-petclinic
  IMAGE_NAME: sashangykumar456/petclinic  # Must match your Docker Hub repository exactly
  IMAGE_TAG: $(Build.BuildId)
  DOCKER_REGISTRY: docker.io  # Explicit registry URL

steps:
- checkout: self

# Cache Maven local repo
- task: Cache@2
  inputs:
    key: 'maven | "$(Agent.OS)" | $(SOURCE_DIR)/pom.xml'
    path: $(MAVEN_CACHE)
  displayName: 'Cache Maven local repo'

# Download Maven
- script: |
    curl -L https://archive.apache.org/dist/maven/maven-3/3.9.4/binaries/apache-maven-3.9.4-bin.tar.gz -o $(Agent.TempDirectory)/maven.tar.gz
  displayName: 'Download Maven'

# Extract Maven
- script: |
    mkdir -p $(MAVEN_DIR)
    tar -xzf $(Agent.TempDirectory)/maven.tar.gz -C $(MAVEN_DIR)
  displayName: 'Extract Maven'

# Maven build
- script: |
    export MAVEN_HOME=$(MAVEN_DIR)/apache-maven-3.9.4
    export PATH=$MAVEN_HOME/bin:$PATH
    cd $(SOURCE_DIR)
    mvn clean install -B -Dmaven.repo.local=$(MAVEN_CACHE)
  displayName: 'Run Maven Build'

# Verify Dockerfile exists
- script: |
    if [ ! -f "$(SOURCE_DIR)/Dockerfile" ]; then
      echo "##vso[task.logissue type=error]Dockerfile not found at $(SOURCE_DIR)/Dockerfile"
      exit 1
    fi
  displayName: 'Verify Dockerfile Exists'

# Docker login (using script with variables)
- script: |
    docker logout $(DOCKER_REGISTRY)
    echo "$(DOCKER_PASSWORD)" | docker login $(DOCKER_REGISTRY) -u "$(DOCKER_USERNAME)" --password-stdin
    docker info | grep Username
  displayName: 'Docker Login'
  env:
    DOCKER_USERNAME: $(DOCKER_USERNAME)
    DOCKER_PASSWORD: $(DOCKER_PASSWORD)

# Build Docker image
- script: |
    cd $(SOURCE_DIR)
    docker build -t $(DOCKER_REGISTRY)/$(IMAGE_NAME):$(IMAGE_TAG) .
  displayName: 'Build Docker Image'

# Push Docker image with retry
- script: |
    docker push $(DOCKER_REGISTRY)/$(IMAGE_NAME):$(IMAGE_TAG) || \
    (sleep 5 && docker push $(DOCKER_REGISTRY)/$(IMAGE_NAME):$(IMAGE_TAG))
  displayName: 'Push Docker Image'